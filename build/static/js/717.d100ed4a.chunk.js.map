{"version":3,"file":"static/js/717.d100ed4a.chunk.js","mappings":"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","sources":["components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/StyledBadge.js","components/ChatElement.js","pages/dashboard/Chats.js","components/Conversation/Header.js","components/Conversation/Footer.js","data/index.js","components/Conversation/MsgTypes.js","components/Conversation/Message.js","components/Conversation/index.js","components/AntSwitch.js","components/Contact.js","pages/dashboard/GeneralApp.js"],"sourcesContent":["import { styled, alpha } from '@mui/material/styles';\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.default, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n  }));\r\n\r\n  export default Search","import { styled} from '@mui/material/styles';\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }));\r\n\r\n  export default SearchIconWrapper;","import { InputBase } from '@mui/material';\r\nimport { styled} from '@mui/material/styles';\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  export default StyledInputBase","import { styled } from \"@mui/material/styles\";\r\nimport { Badge } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    \"& .MuiBadge-badge\": {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  export default StyledBadge","import React from \"react\";\nimport { Avatar, Badge, Box, Stack, Typography } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport StyledBadge from \"./StyledBadge\";\n\n\nconst ChatElement = ({ userRole, id, status, therapist, parent, onClick }) => {\n\n// const ChatElement = ({ id, name, img, msg, time, online, unread, onClick }) => {\n  const theme = useTheme();\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        borderRadius: 1,\n        backgroundColor: theme.palette.mode === 'light' ? \"#fff\" : theme.palette.background.default,\n        cursor: 'pointer'\n      }}\n      p={2}\n      onClick={onClick}\n    >\n      <Stack direction=\"row\" alignItems='center' justifyContent='space-between'>\n        <Stack direction='row' spacing={2}>\n          {/* {online ? <StyledBadge overlap='circular' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} variant=\"dot\">\n            <Avatar src={img} />\n          </StyledBadge> : <Avatar src={img} />} */}\n          <Stack spacing={0.3}>\n            <Typography variant='subtitle2'>\n              {/* {name} */}\n              {userRole==='therapist'?parent:therapist}\n            </Typography>\n            <Typography variant='caption'>\n              {/* {msg} */}\n            </Typography>\n          </Stack>\n        </Stack>\n        <Stack spacing={2} alignItems='center'>\n          <Typography sx={{ fontWeight: 600 }} variant='caption'>\n            {/* {time} */}\n          </Typography>\n          {/* <Badge color='primary' badgeContent={unread} /> */}\n        </Stack>\n      </Stack>\n    </Box>\n  )\n};\n\nexport default ChatElement;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, IconButton, Stack, Typography } from '@mui/material';\nimport { CircleDashed, MagnifyingGlass } from 'phosphor-react';\nimport { useTheme } from '@mui/material/styles';\nimport { Search, SearchIconWrapper, StyledInputBase } from '../../components/Search';\nimport ChatElement from '../../components/ChatElement';\nimport { getUserInfo } from '../../services/userservice';\n\nconst Chats = ({ setSelectedChat }) => {\n  const theme = useTheme();\n  const [conversations, setConversations] = useState([]);\n  // const userRole = localStorage.getItem('userRole'); // Replace with actual key used in local storage\n  // const userId = localStorage.getItem('userId'); // Replace with actual key used in local storage\n  // const [user,setUser]\n\n  const [userRole,setUserRole]=useState(null);\n  const [userId,setUserId] =useState(null)\n\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        const response = await axios.get('http://13.60.35.232:8000/api/conversations/', {\n          headers: {\n            Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIxMDgwNzcxLCJpYXQiOjE3MjA5OTQzNzEsImp0aSI6IjExNDE0OTdhM2U0NDQ3MDRiYTNhNTk0MzlkNTc1OGZjIiwidXNlcl9pZCI6MTF9.j0neBlN2aBFYi9SapE6SQgL7AbG8e4E78SAndOEAC7E`,\n          },\n        });\n\n        const storedUser = getUserInfo();\n        setUserRole(storedUser.role);\n        setUserId(storedUser.id)\n\n        debugger\n\n\n        // Filter conversations based on user role and ID\n        const filteredConversations = response.data.filter(el => {\n          if (storedUser.role === 'therapist') {\n            return el.therapist === parseInt(storedUser.id);\n          } else if (storedUser.role  === 'patient') {\n            return el.parent === parseInt(storedUser.id);\n          }\n          return false;\n        });\n\n        console.log(filteredConversations)\n\n        setConversations(filteredConversations);\n      } catch (error) {\n        console.error('Failed to fetch conversations:', error);\n      }\n    };\n\n    fetchConversations();\n  }, [userRole, userId]); // Include userRole and userId in dependency array\n\n  return (\n    <Box sx={{\n      position: \"relative\", width: 320,\n      backgroundColor: theme.palette.mode === 'light' ? \"#F8FAFF\" : theme.palette.background.paper,\n      boxShadow: '0px 0px 2px rgba(0,0,0,0.25)'\n    }}>\n      <Stack p={3} spacing={2} sx={{ height: \"100vh\" }}>\n        <Stack direction=\"row\" alignItems='center' justifyContent='space-between'>\n          <Typography variant='h5'>\n            Chats\n          </Typography>\n          <IconButton>\n            <CircleDashed />\n          </IconButton>\n        </Stack>\n\n        <Stack sx={{ width: \"100%\" }}>\n          <Search>\n            <SearchIconWrapper>\n              <MagnifyingGlass color=\"#709CE6\" />\n            </SearchIconWrapper>\n            <StyledInputBase placeholder='Search...' inputProps={{ \"aria-label\": \"search\" }} />\n          </Search>\n        </Stack>\n\n        <Stack className='scrollbar' spacing={2} direction='column' sx={{ flexGrow: 1, overflow: 'scroll', height: '100%' }}>\n          <Stack spacing={2.4}>\n            {userRole === 'therapist' && conversations.filter(el => el.status === 2).length > 0 &&\n              <Typography variant='subtitle2' sx={{ color: \"#676767\" }}>\n                Requests\n              </Typography>\n            }\n\n            {userRole === 'therapist' &&\n              conversations.filter(el => el.status === 2).map(el => (\n                <ChatElement userRole={userRole} key={el.id} {...el} onClick={() => setSelectedChat(el)} />\n              ))\n            }\n\n            <Typography variant='subtitle2' sx={{ color: \"#676767\" }}>\n              {userRole === 'patient' ? \"All Therapists\" : \"All Patients\"}\n            </Typography>\n\n            {conversations.filter(el => el.status === 1).map(el => (\n              <ChatElement userRole={userRole}  key={el.id} {...el} onClick={() => setSelectedChat(el)} />\n            ))}\n          </Stack>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Chats;\n","import { Avatar, Box, Typography, IconButton, Divider, Stack, Button, } from '@mui/material'\nimport { CaretDown, MagnifyingGlass, Phone, VideoCamera } from 'phosphor-react'\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from \"@mui/material/styles\";\nimport { faker } from '@faker-js/faker';\nimport StyledBadge from '../StyledBadge';\nimport { ToggleSidebar } from '../../redux/slices/app';\nimport { useDispatch } from 'react-redux';\n\nconst Header = ({ selectedChat, user }) => {\n    const dispatch = useDispatch();\n    const theme = useTheme();\n\n    const [refresh, setRefresh] = useState(true);\n\n    // useEffect(() => {\n    //     setRefresh(!refresh)\n    // }, [selectedChat])\n    return (\n        <Box p={2} sx={{ width: '100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background.paper, boxShadow: '0px 0px 2px rgba(0,0,0,0.25)' }}>\n            <Stack alignItems={'center'} direction='row' justifyContent={'space-between'}\n                sx={{ width: '100%', height: '100%' }}>\n                <Stack onClick={() => {\n                    dispatch(ToggleSidebar());\n                }} direction={'row'} spacing={2}>\n                    <Box>\n                        <StyledBadge overlap=\"circular\"\n                            anchorOrigin={{ // position\n                                vertical: \"bottom\",\n                                horizontal: \"right\",\n                            }}\n                            variant=\"dot\">\n                            {/* <Avatar alt={\"\"} src={selectedChat?.img} /> */}\n                        </StyledBadge>\n\n                    </Box>\n                    <Stack spacing={0.2}>\n                        <Typography variant='subtitle2'>\n                            {/* {selectedChat?.name} */}\n                        </Typography>\n                        <Typography variant='caption'>\n                            {/* {selectedChat?.online === true ? 'Online' : 'Offline'} */}\n                        </Typography>\n                    </Stack>\n                </Stack>\n                {selectedChat.conversationRequest === false && user.role === 'therapist' ?\n                    <Stack direction='row' alignItems='center' spacing={3}>\n                        <Button variant='contained' color='primary' onClick={() => {\n\n                        }}>Close Conversation</Button>\n\n                    </Stack>\n\n                    : user.role === 'patient' && selectedChat.conversationClosed === true ?\n                        <Stack direction='row' alignItems='center' spacing={3}>\n                            <Button variant='contained' color='primary' onClick={() => {\n\n                            }}>Request Again For Conversation</Button>\n\n                        </Stack> :\n                        \"\"\n                }\n\n            </Stack>\n        </Box>\n    )\n}\n\nexport default Header","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  LinkSimple,\r\n  PaperPlaneTilt,\r\n  Image as ImageIcon,\r\n} from \"phosphor-react\";\r\n\r\nconst StyledInput = styled(TextField)(({ theme }) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    paddingTop: \"12px\",\r\n    paddingBottom: \"12px\",\r\n  },\r\n}));\r\n\r\nconst Actions = [\r\n  {\r\n    color: \"#4da5fe\",\r\n    icon: <ImageIcon size={24} />,\r\n    y: 102,\r\n    title: \"Photo/Video\",\r\n    action: \"upload\",\r\n  }\r\n];\r\n\r\nconst ChatInput = ({ setOpenPicker, onSendMessage, handleSendRef }) => {\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleSend = () => {\r\n    if (message.trim() !== \"\" || mediaPreview) {\r\n      onSendMessage({ text: message, media: mediaPreview });\r\n      setMessage(\"\");\r\n      setMediaPreview(null);\r\n    }\r\n  };\r\n\r\n  React.useImperativeHandle(handleSendRef, () => ({\r\n    send: handleSend,\r\n  }));\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const fileURL = URL.createObjectURL(file);\r\n      setMediaPreview({ url: fileURL, type: file.type, file: file }); // Store the file object\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <StyledInput\r\n        fullWidth\r\n        placeholder=\"Write a message...\"\r\n        variant=\"filled\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            handleSend();\r\n          }\r\n        }}\r\n        InputProps={{\r\n          disableUnderline: true,\r\n          startAdornment: (\r\n            <Stack sx={{ width: \"max-content\" }}>\r\n              <Stack\r\n                sx={{\r\n                  position: \"relative\",\r\n                  display: openAction ? \"inline-block\" : \"none\",\r\n                }}\r\n              >\r\n                {Actions.map((action) => (\r\n                  <Tooltip\r\n                    key={action.title}\r\n                    placement=\"right\"\r\n                    title={action.title}\r\n                  >\r\n                    <Fab\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        top: -action.y,\r\n                        backgroundColor: action.color,\r\n                      }}\r\n                      onClick={() => {\r\n                        if (action.action === \"upload\") {\r\n                          fileInputRef.current.click();\r\n                        }\r\n                      }}\r\n                    >\r\n                      {action.icon}\r\n                    </Fab>\r\n                  </Tooltip>\r\n                ))}\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  style={{ display: \"none\" }}\r\n                  accept=\"image/*,video/*\"\r\n                  onChange={handleFileChange}\r\n                />\r\n              </Stack>\r\n              <InputAdornment>\r\n                <IconButton onClick={() => setOpenAction((prev) => !prev)}>\r\n                  <LinkSimple />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            </Stack>\r\n          ),\r\n        }}\r\n      />\r\n      {mediaPreview && (\r\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\r\n          {mediaPreview.type.startsWith(\"image\") ? (\r\n            <Avatar\r\n              src={mediaPreview.url}\r\n              alt=\"Image preview\"\r\n              sx={{ width: 100, height: 100 }}\r\n            />\r\n          ) : (\r\n            <video\r\n              controls\r\n              src={mediaPreview.url}\r\n              style={{ width: \"100%\", maxHeight: \"200px\" }}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Footer = ({ onSendMessage }) => {\r\n  const theme = useTheme();\r\n  const [openPicker, setOpenPicker] = useState(false);\r\n  const handleSendRef = useRef();\r\n\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        width: \"100%\",\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#F8FAFF\"\r\n            : theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n      }}\r\n    >\r\n      <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\r\n        <Stack sx={{ width: \"100%\" }}>\r\n          <ChatInput\r\n            setOpenPicker={setOpenPicker}\r\n            onSendMessage={onSendMessage}\r\n            handleSendRef={handleSendRef}\r\n          />\r\n        </Stack>\r\n        <Box\r\n          sx={{\r\n            height: 48,\r\n            width: 48,\r\n            backgroundColor: theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={() => handleSendRef.current.send()} // Trigger send message\r\n            sx={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <PaperPlaneTilt color=\"#fff\" size={24} />\r\n          </IconButton>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { faker } from \"@faker-js/faker\";\r\nimport {\r\n  ChatCircleDots,\r\n  Gear,\r\n  GearSix,\r\n  Phone,\r\n  SignOut,\r\n  User,\r\n  Users,\r\n} from \"phosphor-react\";\r\n\r\n// src/data/conversations.js\r\nexport const users = [\r\n  { id: 1, username: \"therapist1\" },\r\n  { id: 2, username: \"therapist2\" },\r\n  { id: 3, username: \"therapist3\" },\r\n  { id: 4, username: \"parent1\" },\r\n  { id: 5, username: \"parent2\" },\r\n  { id: 6, username: \"parent3\" }\r\n];\r\n\r\n// export const messages =[\r\n//   {\r\n//     oConversations:conversations,\r\n//     sender:ChatList,\r\n//     content:String\r\n//   }\r\n// ]\r\n\r\nexport const conversations = [\r\n  {\r\n    id: 1,\r\n    therapist: 1,\r\n    parent: 4,\r\n    status: \"active\",\r\n    content: [\r\n      { id: 1, sender: 1, content: \"Hi, how are you?\", timestamp: \"2023-07-01T10:00:00Z\" },\r\n      { id: 2, sender: 4, content: \"I'm good, thank you!\", timestamp: \"2023-07-01T10:05:00Z\" },\r\n      { id: 3, sender: 1, content: \"Great to hear!\", timestamp: \"2023-07-01T10:10:00Z\" }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    therapist: 2,\r\n    parent: 5,\r\n    status: \"active\",\r\n    content: [\r\n      { id: 4, sender: 2, content: \"Hi, can we reschedule our meeting?\", timestamp: \"2023-07-02T12:00:00Z\" },\r\n      { id: 5, sender: 5, content: \"Sure, when would you like to reschedule?\", timestamp: \"2023-07-02T12:05:00Z\" }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    therapist: 3,\r\n    parent: 6,\r\n    status: \"active\",\r\n    content: [\r\n      { id: 6, sender: 3, content: \"Hello, how's the therapy going?\", timestamp: \"2023-07-03T14:00:00Z\" },\r\n      { id: 7, sender: 6, content: \"It's going well, thanks!\", timestamp: \"2023-07-03T14:05:00Z\" }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\nconst Profile_Menu = [\r\n  {\r\n    title: \"Profile\",\r\n    icon: <User />,\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    icon: <Gear />,\r\n  },\r\n  {\r\n    title: \"Logout\",\r\n    icon: <SignOut />,\r\n  },\r\n];\r\n\r\nconst Nav_Buttons = [\r\n  {\r\n    index: 0,\r\n    icon: <ChatCircleDots />,\r\n  },\r\n  {\r\n    index: 1,\r\n    icon: <Users />,\r\n  },\r\n  {\r\n    index: 2,\r\n    icon: <Phone />,\r\n  },\r\n];\r\n\r\nconst Nav_Setting = [\r\n  {\r\n    index: 3,\r\n    icon: <GearSix />,\r\n  },\r\n];\r\n\r\nconst CallLogs = [\r\n  {\r\n    id:0,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: false,\r\n    incoming: true,\r\n  },\r\n  {\r\n    id:1,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: true,\r\n    incoming: true,\r\n  },\r\n  {\r\n    id:2,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: false,\r\n    incoming: false,\r\n  },\r\n  {\r\n    id:3,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: false,\r\n    incoming: true,\r\n  },\r\n  {\r\n    id:4,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: true,\r\n    incoming: true,\r\n  }\r\n];\r\n\r\nconst MembersList = [\r\n  {\r\n    id:0,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: true\r\n  },\r\n  {\r\n    id:1,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: false\r\n  },\r\n  {\r\n    id:2,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: true\r\n  },\r\n  {\r\n    id:3,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: false\r\n  },\r\n  {\r\n    id:4,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: true\r\n  }\r\n];\r\n\r\nconst ChatList = [\r\n  {\r\n    id: 1,\r\n    name: \"John Doe\",\r\n    img: \"https://via.placeholder.com/150\",\r\n    online: true,\r\n    unread: 2,\r\n    conversationRequest: true,\r\n    conversationClosed:false,\r\n    time: \"9:36\",\r\n    messages: [\r\n      // { id: 1, type: \"msg\", message: \"Hi 👋🏻, How are you?\", incoming: true, outgoing: false },\r\n      // { id: 2, type: \"divider\", text: \"Today\" },\r\n      // { id: 3, type: \"msg\", message: \"Hi John, I am good. How about you?\", incoming: false, outgoing: true },\r\n      // { id: 4, type: \"msg\", message: \"I'm great, thanks for asking!\", incoming: true, outgoing: false }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Jane Smith\",\r\n    img: \"https://via.placeholder.com/150\",\r\n    online: false,\r\n    unread: 1,\r\n    conversationRequest: false,\r\n    conversationClosed:false,\r\n    time: \"9:36\",\r\n    messages: [\r\n      { id: 1, type: \"msg\", message: \"Can you send me the report?\", incoming: true, outgoing: false },\r\n      { id: 2, type: \"divider\", text: \"Yesterday\" },\r\n      { id: 3, type: \"msg\", message: \"Sure, I will send it by EOD.\", incoming: false, outgoing: true },\r\n      { id: 4, type: \"msg\", message: \"Thanks!\", incoming: true, outgoing: false }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Alex Johnson\",\r\n    img: \"https://via.placeholder.com/150\",\r\n    online: true,\r\n    conversationRequest: false,\r\n    conversationClosed:true,\r\n    time: \"9:36\",\r\n    unread: 0,\r\n    messages: [\r\n      { id: 1, type: \"msg\", message: \"Testing\", incoming: true, outgoing: false },\r\n      { id: 2, type: \"divider\", text: \"Today\" },\r\n      { id: 3, type: \"msg\", message: \"Yes, I'll be there in 10 minutes.\", incoming: false, outgoing: true }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n// const ChatList = [\r\n//   {\r\n//     id: 1,\r\n//     name: \"John Doe\",\r\n//     img: \"https://via.placeholder.com/150\",\r\n//     online: true,\r\n//     unread: 2,\r\n//     conversationRequest: true,\r\n//     time: \"9:36\",\r\n//     messages: [\r\n//       { id: 1, type: \"msg\", message: \"Hi 👋🏻, How are you?\", incoming: true, outgoing: false },\r\n//       { id: 2, type: \"divider\", text: \"Today\" },\r\n//       { id: 3, type: \"msg\", message: \"Hi John, I am good. How about you?\", incoming: false, outgoing: true },\r\n//       { id: 4, type: \"msg\", message: \"I'm great, thanks for asking!\", incoming: true, outgoing: false }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Jane Smith\",\r\n//     img: \"https://via.placeholder.com/150\",\r\n//     online: false,\r\n//     unread: 1,\r\n//     conversationRequest: false,\r\n//     time: \"9:36\",\r\n//     messages: [\r\n//       // { id: 1, type: \"msg\", message: \"Can you send me the report?\", incoming: true, outgoing: false },\r\n//       // { id: 2, type: \"divider\", text: \"Yesterday\" },\r\n//       // { id: 3, type: \"msg\", message: \"Sure, I will send it by EOD.\", incoming: false, outgoing: true },\r\n//       // { id: 4, type: \"msg\", message: \"Thanks!\", incoming: true, outgoing: false }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"Alex Johnson\",\r\n//     img: \"https://via.placeholder.com/150\",\r\n//     online: true,\r\n//     conversationRequest: false,\r\n//     time: \"9:36\",\r\n//     unread: 0,\r\n//     messages: [\r\n//       { id: 1, type: \"msg\", message: \"Testing\", incoming: true, outgoing: false },\r\n//       { id: 2, type: \"divider\", text: \"Today\" },\r\n//       { id: 3, type: \"msg\", message: \"Yes, I'll be there in 10 minutes.\", incoming: false, outgoing: true }\r\n//     ]\r\n//   }\r\n// ];\r\nconst Chat_History = [\r\n  {\r\n    type: \"msg\",\r\n    message: \"Hi 👋🏻, How are ya ?\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"divider\",\r\n    text: \"Today\",\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Hi 👋 Panda, not bad, u ?\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Can you send me an abstarct image?\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Ya sure, sending you a pic\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"img\",\r\n    message: \"Here You Go\",\r\n    img: faker.image.abstract(),\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Can you please send this in file format?\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"reply\",\r\n    reply: \"This is a reply\",\r\n    message: \"Yep, I can also do that\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n];\r\n\r\nconst Message_options = [\r\n  {\r\n    title: \"Reply\",\r\n  },\r\n  {\r\n    title: \"React to message\",\r\n  },\r\n  {\r\n    title: \"Forward message\",\r\n  },\r\n  {\r\n    title: \"Star message\",\r\n  },\r\n  {\r\n    title: \"Report\",\r\n  },\r\n  {\r\n    title: \"Delete Message\",\r\n  },\r\n];\r\n\r\nconst SHARED_LINKS = [\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  }\r\n]\r\n\r\nconst SHARED_DOCS = [\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n \r\n]\r\n\r\nexport {\r\n  Profile_Menu,\r\n  Nav_Setting,\r\n  Nav_Buttons,\r\n  ChatList,\r\n  Chat_History,\r\n  Message_options,\r\n  SHARED_DOCS,\r\n  SHARED_LINKS,\r\n  CallLogs,\r\n  MembersList\r\n};\r\n","import {\n    Box,\n    Divider,\n    IconButton,\n    Link,\n    Stack,\n    Typography,\n    Menu,\n    MenuItem,\n    Dialog,\n    DialogContent,\n    DialogActions,\n    Button,\n  } from \"@mui/material\";\n  import { useTheme } from \"@mui/material/styles\";\n  import { DotsThreeVertical, DownloadSimple, Image, User } from \"phosphor-react\";\n  import React, { useEffect, useState } from \"react\";\n  import { Message_options } from \"../../data\";\n  \n  const DocMsg = ({ el, menu }) => {\n    const theme = useTheme();\n    return (\n      <></>\n      // <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      //   <Box\n      //     p={1.5}\n      //     sx={{\n      //       backgroundColor: el.incoming\n      //         ? theme.palette.background.default\n      //         : theme.palette.primary.main,\n      //       borderRadius: 1.5,\n      //       width: \"max-content\",\n      //     }}\n      //   >\n      //     <Stack spacing={2}>\n      //       <Stack\n      //         p={2}\n      //         spacing={3}\n      //         direction=\"row\"\n      //         alignItems=\"center\"\n      //         sx={{\n      //           backgroundColor: theme.palette.background.paper,\n      //           borderRadius: 1,\n      //         }}\n      //       >\n      //         <Image size={48} />\n      //         <Typography variant=\"caption\">Abstract.png</Typography>\n      //         <IconButton>\n      //           <DownloadSimple />\n      //         </IconButton>\n      //       </Stack>\n      //       <Typography\n      //         variant=\"body2\"\n      //         sx={{ color: el.incoming ? theme.palette.text : \"#fff\" }}\n      //       >\n      //         {el.message}\n      //       </Typography>\n      //     </Stack>\n      //   </Box>\n      //   {/* {menu && <MessageOptions />} */}\n      // </Stack>\n    );\n  };\n  \n  const LinkMsg = ({ el, menu }) => {\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [imgSrc, setImgSrc] = useState(null);\n  \n    const handleClickOpen = (src) => {\n      setImgSrc(src);\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n      setImgSrc(null);\n    };\n  \n    return (\n      <></>\n      // <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      //   <Box\n      //     p={1.5}\n      //     sx={{\n      //       backgroundColor: el.incoming\n      //         ? theme.palette.background.default\n      //         : theme.palette.primary.main,\n      //       borderRadius: 1.5,\n      //       width: \"max-content\",\n      //     }}\n      //   >\n      //     <Stack spacing={2}>\n      //       <Stack\n      //         p={2}\n      //         spacing={3}\n      //         alignItems=\"start\"\n      //         sx={{\n      //           backgroundColor: theme.palette.background.paper,\n      //           borderRadius: 1,\n      //         }}\n      //       >\n      //         <img\n      //           src={el.preview}\n      //           alt={el.message}\n      //           style={{\n      //             maxHeight: 210,\n      //             borderRadius: \"10px\",\n      //             cursor: \"pointer\",\n      //           }}\n      //           onClick={() => handleClickOpen(el.preview)}\n      //         />\n      //         <Stack spacing={2}>\n      //           <Typography variant=\"subtitle2\">Creating Chat App</Typography>\n      //           <Typography\n      //             variant=\"subtitle2\"\n      //             sx={{ color: theme.palette.primary.main }}\n      //             component={Link}\n      //             to=\"//https://www.youtube.com\"\n      //           >\n      //             www.youtube.com\n      //           </Typography>\n      //         </Stack>\n      //         <Typography\n      //           variant=\"body2\"\n      //           color={el.incoming ? theme.palette.text : \"#fff\"}\n      //         >\n      //           {el.message}\n      //         </Typography>\n      //       </Stack>\n      //     </Stack>\n      //   </Box>\n      //   {menu && <MessageOptions />}\n      //   <ImageDialog open={open} onClose={handleClose} imgSrc={imgSrc} />\n      // </Stack>\n    );\n  };\n  \n  const ReplyMsg = ({ el, menu }) => {\n    const theme = useTheme();\n    return (\n      <></>\n      // <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\n      //   <Box\n      //     p={1.5}\n      //     sx={{\n      //       backgroundColor: el.incoming\n      //         ? theme.palette.background.default\n      //         : theme.palette.primary.main,\n      //       borderRadius: 1.5,\n      //       width: \"max-content\",\n      //     }}\n      //   >\n      //     <Stack spacing={2}>\n      //       <Stack\n      //         p={2}\n      //         direction=\"column\"\n      //         spacing={3}\n      //         alignItems=\"center\"\n      //         sx={{\n      //           backgroundColor: theme.palette.background.paper,\n      //           borderRadius: 1,\n      //         }}\n      //       >\n      //         <Typography variant=\"body2\" color={theme.palette.text}>\n      //           {el.message}\n      //         </Typography>\n      //       </Stack>\n      //       <Typography\n      //         variant=\"body2\"\n      //         color={el.incoming ? theme.palette.text : \"#fff\"}\n      //       >\n      //         {el.reply}\n      //       </Typography>\n      //     </Stack>\n      //   </Box>\n      //   {menu && <MessageOptions />}\n      // </Stack>\n    );\n  };\n  \n  const MediaMsg = ({ el, menu,userRole,userId }) => {\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n    const [imgSrc, setImgSrc] = useState(null);\n  \n    const handleClickOpen = (src) => {\n      setImgSrc(src);\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n      setImgSrc(null);\n    };\n  \n    return (\n      <Stack direction=\"row\" justifyContent={el.sender!==userId ? \"start\" : \"end\"}>\n        <Box\n          p={1.5}\n          sx={{\n            backgroundColor: el.sender!==userId\n              ? theme.palette.background.default\n              : theme.palette.primary.main,\n            borderRadius: 1.5,\n            width: \"max-content\",\n          }}\n        >\n          <Stack spacing={1}>\n            {el.file.endsWith('.svg') || el.file.endsWith('.png') && (\n              <img\n                src={el.file}\n                alt={el.content}\n                style={{\n                  maxHeight: 210,\n                  borderRadius: \"10px\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => handleClickOpen(el.file)}\n              />\n            )}\n            {el.file.endsWith('.mp4') && (\n              <video\n                controls\n                src={el.file}\n                style={{ width: \"100%\", maxHeight: 210, borderRadius: \"10px\" }}\n              />\n            )}\n            <Typography\n              variant=\"body2\"\n              color={el.sender!==userId ? theme.palette.text : \"#fff\"}\n            >\n              {el.content}\n            </Typography>\n          </Stack>\n        </Box>\n        {/* {menu && <MessageOptions />} */}\n        <ImageDialog open={open} onClose={handleClose} imgSrc={imgSrc} />\n      </Stack>\n    );\n  };\n  \n  const TextMsg = ({ el, menu,userId,userRole }) => {\n    const theme = useTheme();\n\n\n    return (\n      <Stack direction=\"row\" justifyContent={el.sender!==userId? \"start\" : \"end\"}>\n        <Box\n          p={1.5}\n          sx={{\n            backgroundColor: el.sender!==userId\n              ? theme.palette.background.default\n              : theme.palette.primary.main,\n            borderRadius: 1.5,\n            width: \"max-content\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            color={el.sender!==userId ? theme.palette.text : \"#fff\"}\n          >\n            {el.content}\n          </Typography>\n        </Box>\n        {/* {menu && <MessageOptions />} */}\n      </Stack>\n    );\n  };\n  \n  const TimeLine = ({ el }) => {\n    const theme = useTheme();\n    return (\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Divider width=\"46%\" />\n        <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\n          {el.content}\n        </Typography>\n        <Divider width=\"46%\" />\n      </Stack>\n    );\n  };\n  \n  const MessageOptions = () => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return (\n      <>\n        <DotsThreeVertical\n          id=\"basic-button\"\n          aria-controls={open ? \"basic-menu\" : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? \"true\" : undefined}\n          onClick={handleClick}\n          size={20}\n        />\n  \n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            \"aria-labelledby\": \"basic-button\",\n          }}\n        >\n          <Stack spacing={1} px={1}>\n            {Message_options.map((el) => (\n              <MenuItem onClick={handleClose}>{el.title}</MenuItem>\n            ))}\n          </Stack>\n        </Menu>\n      </>\n    );\n  };\n  \n  const ImageDialog = ({ open, onClose, imgSrc }) => {\n    return (\n      <Dialog open={open} onClose={onClose} maxWidth=\"md\">\n        <DialogContent>\n          <img src={imgSrc} alt=\"Preview\" style={{ width: \"100%\" }} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n  \n  // should not be default export, because we need to export multiple things\n  export { TimeLine, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg };\n  ","import { Box, Button, Stack, Typography } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport {\n  DocMsg,\n  LinkMsg,\n  MediaMsg,\n  ReplyMsg,\n  TextMsg,\n  TimeLine,\n} from \"./MsgTypes\";\n\nconst Message = ({ chatHistory, menu, onRequestConversation,userId,userRole }) => {\n\n  if (!chatHistory || !chatHistory.messages || chatHistory.messages.length === 0) {\n    return (\n      <Box p={3} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n        <Stack spacing={3} alignItems=\"center\">\n          <Typography variant=\"h6\">No chat history found.</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={onRequestConversation}>\n            Request Conversation with Therapist\n          </Button>\n        </Stack>\n      </Box>\n    );\n  }\n\n  return (\n    <Box p={3}>\n      <Stack spacing={3}>\n        {chatHistory.messages.map((el, index) => {\n          if(el.file)\n          {\n            return <MediaMsg userRole={userRole} userId={userId}  key={index} el={el} menu={menu} />;\n          }\n          if(el.content)\n          {\n            return <TextMsg userRole={userRole} userId={userId} key={index} el={el} menu={menu} />;\n          }\n          // switch (el.type) {\n          //   case \"divider\":\n          //     return <TimeLine key={index} el={el} />;\n          //   case \"msg\":\n          //     switch (el.subtype) {\n          //       case \"img\":\n          //       case \"video\": // Add video subtype here\n          //         return <MediaMsg key={index} el={el} menu={menu} />;\n          //       case \"doc\":\n          //         return <DocMsg key={index} el={el} menu={menu} />;\n          //       case \"link\":\n          //         return <LinkMsg key={index} el={el} menu={menu} />;\n          //       case \"reply\":\n          //         return <ReplyMsg key={index} el={el} menu={menu} />;\n          //       default:\n          //         return <TextMsg userRole={userRole} userId={userId} key={index} el={el} menu={menu} />;\n          //     }\n          //   default:\n          //     return <></>;\n          // }\n        })}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Message;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Button, Stack, Typography } from '@mui/material';\nimport { useTheme } from \"@mui/material/styles\";\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\nimport { conversations, Chat_History as initialChatHistory } from \"../../data\"; // Make sure the path is correct\nimport axios from 'axios';\n\n\nconst Conversation = ({userRole, userId,user, selectedChat, onRequestConversation }) => {\n  const theme = useTheme();\n\n\n\n  const [chatHistory, setChatHistory] = useState(selectedChat?.messages ? selectedChat : null);\n\n  useEffect(()=>{\n    setChatHistory(selectedChat?.messages ? selectedChat : null)\n  },[selectedChat])\n\n  const handleSendMessage = async (messageData) => {\n    const newMessage = {\n      conversation: selectedChat.id,\n      content: messageData?.text || \"\",\n      sender: userId,\n      file: messageData?.media ? messageData.media.file : null,\n      // type: messageData?.media ? (messageData.media.type.startsWith(\"image\") ? \"image\" : \"video\") : \"text\",\n    };\n    debugger\n\n    // if (messageData?.media) {\n    //   if (messageData.media.type.startsWith(\"image\")) {\n    //     newMessage.file = \"img\";\n    //     newMessage.img = messageData.media.url;\n    //   } else if (messageData.media.type.startsWith(\"video\")) {\n    //     newMessage.subtype = \"video\";\n    //     newMessage.video = messageData.media.url;\n    //   }\n    // }\n\n    try {\n      const response = await axios.post('http://13.60.35.232:8000/api/messages/', newMessage, {\n        headers: {\n          Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIxMDgwNzcxLCJpYXQiOjE3MjA5OTQzNzEsImp0aSI6IjExNDE0OTdhM2U0NDQ3MDRiYTNhNTk0MzlkNTc1OGZjIiwidXNlcl9pZCI6MTF9.j0neBlN2aBFYi9SapE6SQgL7AbG8e4E78SAndOEAC7E`, // Replace authToken with your actual token variable\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      if (response.status === 201) {\n        const savedMessage = response.data;\n        debugger\n        setChatHistory((prevHistory) => ({\n          ...prevHistory,\n          messages: [...prevHistory.messages, savedMessage],\n        }));\n      } else {\n        console.error('Failed to send message:', response);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n\n  const requestChat = () => {\n    // if (!chatHistory || !chatHistory.messages || chatHistory.messages.length === 0) {\n\n    return (\n      <Box p={3} display=\"flex\" justifyContent=\"center\"  height=\"100%\">\n        <Stack spacing={3} alignItems=\"center\">\n          <Typography variant=\"h6\">No chat history found.</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={onRequestConversation}>\n            Request Conversation with Therapist\n          </Button>\n        </Stack>\n      </Box>\n    );\n    // }\n  }\n\n  const acceptChat = () => {\n    // if (!chatHistory || !chatHistory.messages || chatHistory.messages.length === 0) {\n\n    return (\n      <Box p={3} display=\"flex\" justifyContent=\"center\"  height=\"100%\">\n        <Stack spacing={3} alignItems=\"center\">\n          {/* <Typography variant=\"h6\">No chat history found.</Typography> */}\n          <Button variant=\"contained\" color=\"primary\" onClick={onRequestConversation}>\n            Accept Conversation Request from Patient\n          </Button>\n        </Stack>\n      </Box>\n    );\n    // }\n  }\n\n\n\n\n  return (\n    <Stack height={'100%'} maxHeight={'100vh'} width={'auto'}>\n      {chatHistory ? <Header selectedChat={chatHistory} user={user}/> : \"\"}\n      <Box className='scrollbar' width={\"100%\"} sx={{ flexGrow: 1, height: '100%', overflowY: 'scroll' }}>\n        {chatHistory ? <Message userRole={userRole} userId={userId} chatHistory={chatHistory} menu={true} onRequestConversation={onRequestConversation} /> : \n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n          <Typography variant='h6'>\n            {userRole===\"therapist\"?\"Select a patient to chat\" : \"Select a therapist for consultation\"}\n          </Typography>\n        </Box>}\n      </Box>\n      {chatHistory === null ||chatHistory.conversationClosed===true ? \"\" : chatHistory && chatHistory.messages && chatHistory.messages.length > 0 ? <Footer onSendMessage={handleSendMessage} /> : userRole==='therapist'?acceptChat() : requestChat()}\n    </Stack>\n  );\n};\n\nexport default Conversation;\n","import { Switch } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n  width: 40,\r\n  height: 20,\r\n  padding: 0,\r\n  display: 'flex',\r\n  '&:active': {\r\n    '& .MuiSwitch-thumb': {\r\n      width: 15,\r\n    },\r\n    '& .MuiSwitch-switchBase.Mui-checked': {\r\n      transform: 'translateX(9px)',\r\n    },\r\n  },\r\n  '& .MuiSwitch-switchBase': {\r\n    padding: 2,\r\n    '&.Mui-checked': {\r\n      transform: 'translateX(20px)',\r\n      color: '#fff',\r\n      '& + .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n      },\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n    width: 16,\r\n    height: 16,\r\n    borderRadius: 8,\r\n    transition: theme.transitions.create(['width'], {\r\n      duration: 200,\r\n    }),\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 20 / 2,\r\n    opacity: 1,\r\n    backgroundColor:\r\n      theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nexport default AntSwitch;\r\n","import { Avatar, Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, IconButton, Slide, Stack, Typography} from '@mui/material'\r\nimport React, { useState } from 'react';\r\nimport {useTheme } from \"@mui/material/styles\";\r\nimport { Bell, CaretRight, Phone, Prohibit, Star, Trash, VideoCamera, X } from 'phosphor-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ToggleSidebar, UpdateSidebarType } from '../redux/slices/app';\r\nimport { faker } from '@faker-js/faker';\r\nimport AntSwitch from './AntSwitch';\r\nimport '../css/global.css';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst BlockDialog = ({open, handleClose}) =>{\r\n  return (\r\n    <Dialog\r\n    open={open}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleClose}\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n  >\r\n    <DialogTitle>Block this contact</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\">\r\n       Are you sure you want to block this contact?\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose}>Cancel</Button>\r\n      <Button onClick={handleClose}>Yes</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n  )\r\n}\r\n\r\nconst DeleteDialog = ({open, handleClose}) =>{\r\n  return (\r\n    <Dialog\r\n    open={open}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleClose}\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n  >\r\n    <DialogTitle>Delete this chat</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\">\r\n       Are you sure you want to delete this chat?\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose}>Cancel</Button>\r\n      <Button onClick={handleClose}>Yes</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n  )\r\n}\r\n\r\nconst Contact = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openBlock, setOpenBlock] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const handleCloseBlock = () =>{\r\n    setOpenBlock(false);\r\n  }\r\n\r\n  const handleCloseDelete = () =>{\r\n    setOpenDelete(false);\r\n  }\r\n\r\n  return (\r\n    <Box sx={{width:320, height:'100vh'}}>\r\n      <Stack sx={{height:'100%'}}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          boxShadow: '0px 0px 2px rgba(0.25)',\r\n          width: '100%',\r\n          backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background\r\n        }}>\r\n          <Stack sx={{height:'100%', p:2}} direction='row' alignItems='center'\r\n           justifyContent='space-between' spacing={3}>\r\n            <Typography variant='subtitle2'>Contact Info</Typography>\r\n            <IconButton onClick={()=>{\r\n              dispatch(ToggleSidebar());\r\n            }}>\r\n              <X/>\r\n            </IconButton>\r\n          </Stack>\r\n        </Box>\r\n        {/* Body */}\r\n        <Stack className='scrollbar'  sx={{height:'100%', position:'relative', flexGrow:1, overflowY:'scroll'}} p={3}\r\n        spacing={3}>\r\n          <Stack alignItems={'center'} direction='row' spacing={2}>\r\n            <Avatar src={faker.image.avatar()} alt={faker.name.firstName} sx={{height:64, width:64}}/>\r\n            <Stack spacing={0.5}>\r\n              <Typography variant='article' fontWeight={600}>\r\n                {faker.name.fullName()}\r\n              </Typography>\r\n              <Typography variant='article' fontWeight={500}>\r\n                {'+94 713725452'}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack direction='row' alignItems='center' justifyContent='space-evenly'>\r\n            <Stack spacing={1} alignItems='center' >\r\n              <IconButton>\r\n                <Phone/>\r\n              </IconButton>\r\n              <Typography variant='overline'>Voice</Typography>\r\n            </Stack>\r\n            <Stack spacing={1} alignItems='center' >\r\n              <IconButton>\r\n                <VideoCamera/>\r\n              </IconButton>\r\n              <Typography variant='overline'>Video</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack spacing={0.5}>\r\n            <Typography variant='article'>About</Typography>\r\n            <Typography variant='body2'>Hi I'm working</Typography>\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack direction='row' alignItems={'center'} justifyContent='space-between' >\r\n            <Typography variant='subtitle2'>Media, Links & Docs</Typography>\r\n            <Button onClick={()=>{\r\n              dispatch(UpdateSidebarType('SHARED'))\r\n            }} endIcon={<CaretRight/>}>401</Button>\r\n          </Stack>\r\n          <Stack direction='row' spacing={2} alignItems={'center'}>\r\n            {[1,2,3].map((el)=>(\r\n              <Box>\r\n                <img src={faker.image.food()} alt={faker.name.fullName()}/>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack direction='row' alignItems={'center'} justifyContent='space-between'>\r\n            <Stack direction='row' spacing={2} alignItems={'center'}>\r\n              <Star size={21}/>\r\n              <Typography variant='subtitle2'>Starred Messages</Typography>\r\n            </Stack>\r\n            <IconButton onClick={()=>{\r\n              dispatch(UpdateSidebarType('STARRED'))\r\n            }}><CaretRight/></IconButton>\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack direction='row' alignItems={'center'} justifyContent='space-between'>\r\n            <Stack direction='row' spacing={2} alignItems={'center'}>\r\n              <Bell size={21}/>\r\n              <Typography variant='subtitle2'>Mute Notifications</Typography>\r\n            </Stack>\r\n            <AntSwitch/>\r\n          </Stack>\r\n          <Divider/>\r\n          <Typography>1 group in common</Typography>\r\n          <Stack direction='row' spacing={2} alignItems={'center'}>\r\n            <Avatar src={faker.image.avatar()} alt={faker.name.fullName}/>\r\n            <Stack spacing={0.5}>\r\n              <Typography variant='subtitle2' >React Developers</Typography>\r\n              <Typography variant='caption' >Kaveena, Pavithra, Ayesha, You</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack direction='row' alignItems={'center'} spacing={2}>\r\n            <Button onClick={()=>{setOpenBlock(true)}} startIcon={<Prohibit/>} fullWidth variant='outlined'>\r\n              Block\r\n            </Button >\r\n            <Button onClick={()=>{setOpenDelete(true)}} startIcon={<Trash/>} fullWidth variant='outlined'>\r\n              Delete\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n      {openBlock && <BlockDialog open={openBlock} handleClose={handleCloseBlock}/>}\r\n      {openDelete && <DeleteDialog open={openDelete} handleClose={handleCloseDelete}/>}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Contact","import React, { useState, useEffect } from \"react\";\nimport { Box, Stack } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useSelector } from \"react-redux\";\nimport Chats from \"./Chats\";\nimport Conversation from \"../../components/Conversation\";\nimport Contact from \"../../components/Contact\";\nimport SharedMessages from \"../../components/SharedMessages\";\nimport StarredMessages from \"../../components/StarredMessages\";\nimport { getUserInfo } from \"../../services/userservice\";\nimport axios from \"axios\";\n// import ChatRequests from \"../../components/ChatRequests\";\n\nconst GeneralApp = () => {\n  const theme = useTheme();\n  const { sidebar } = useSelector((store) => store.app); // access our store inside component\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isAwaitingApproval, setIsAwaitingApproval] = useState(false);\n  const [userRole,setUserRole]=useState(null);\n  const [userId,setUserId]=useState(null);\n  const [user,setUser]=useState(null)\n\n\n\n  useEffect(()=>{\n    const storedUser = getUserInfo();\n    setUserRole(storedUser.role);\n    setUserId(storedUser.id)\n    setUser(storedUser)\n  },[])\n \n\n  const handleRequestConversation =() =>{\n    \n  }\n\n\n  const handleChatSelection = async (chat) => {\n    const response = await axios.get(`http://13.60.35.232:8000/api/messages?conversation_id=${chat.id}`, {\n      headers: {\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIxMDgwNzcxLCJpYXQiOjE3MjA5OTQzNzEsImp0aSI6IjExNDE0OTdhM2U0NDQ3MDRiYTNhNTk0MzlkNTc1OGZjIiwidXNlcl9pZCI6MTF9.j0neBlN2aBFYi9SapE6SQgL7AbG8e4E78SAndOEAC7E`,\n      },\n    });\n\n    const updatedChat = {\n      ...chat,\n      messages: response.data,\n    };\n\n    setSelectedChat(updatedChat);\n    // Check if there's a pending request\n    if (chat.status === 'pending') {\n      setIsAwaitingApproval(true);\n    } else {\n      setIsAwaitingApproval(false);\n    }\n  };\n\n  return (\n    <Stack direction=\"row\" sx={{ width: \"100%\" }}>\n      {/* Chats */}\n      <Chats setSelectedChat={handleChatSelection} />\n\n      <Box\n        sx={{\n          height: \"100%\",\n          width: \"100vw\",\n          backgroundColor:\n            theme.palette.mode === \"light\" ? \"#F0F4FA\" : theme.palette.background.default,\n        }}\n      >\n        {/* Conversation */}\n        <Conversation\n        user={user}\n        userRole={userRole}\n        userId={userId}\n          selectedChat={selectedChat}\n          onRequestConversation={handleRequestConversation}\n          // isAwaitingApproval={isAwaitingApproval}\n        />\n      </Box>\n      {/* Contact */}\n      {sidebar.open &&\n        (() => {\n          switch (sidebar.type) {\n            case \"CONTACT\":\n              return <Contact />;\n            case \"STARRED\":\n              return <StarredMessages />;\n            case \"SHARED\":\n              return <SharedMessages />;\n            default:\n              break;\n          }\n        })()}\n    </Stack>\n  );\n};\n\nexport default GeneralApp;\n"],"names":["styled","_ref","theme","position","borderRadius","backgroundColor","alpha","palette","background","default","marginRight","spacing","marginLeft","width","padding","height","pointerEvents","display","alignItems","justifyContent","InputBase","color","paddingLeft","concat","Badge","boxShadow","paper","top","left","animation","border","content","transform","opacity","userRole","id","status","therapist","parent","onClick","useTheme","_jsx","Box","sx","mode","cursor","p","children","_jsxs","Stack","direction","Typography","variant","fontWeight","setSelectedChat","conversations","setConversations","useState","setUserRole","userId","setUserId","useEffect","async","response","axios","get","headers","Authorization","storedUser","getUserInfo","role","filteredConversations","data","filter","el","parseInt","console","log","error","fetchConversations","IconButton","CircleDashed","Search","SearchIconWrapper","MagnifyingGlass","StyledInputBase","placeholder","inputProps","className","flexGrow","overflow","length","map","ChatElement","selectedChat","user","dispatch","useDispatch","refresh","setRefresh","ToggleSidebar","StyledBadge","overlap","anchorOrigin","vertical","horizontal","conversationRequest","Button","conversationClosed","StyledInput","TextField","paddingTop","paddingBottom","Actions","icon","ImageIcon","size","y","title","action","ChatInput","_ref2","setOpenPicker","onSendMessage","handleSendRef","openAction","setOpenAction","message","setMessage","mediaPreview","setMediaPreview","fileInputRef","useRef","handleSend","trim","text","media","React","send","fullWidth","value","onChange","e","target","onKeyPress","key","InputProps","disableUnderline","startAdornment","Tooltip","placement","Fab","current","click","type","ref","style","accept","event","file","files","fileURL","URL","createObjectURL","url","InputAdornment","prev","LinkSimple","mt","textAlign","startsWith","Avatar","src","alt","controls","maxHeight","_ref3","openPicker","primary","main","PaperPlaneTilt","User","Gear","SignOut","ChatCircleDots","Users","Phone","GearSix","faker","image","avatar","name","firstName","abstract","cats","MediaMsg","_ref4","menu","open","setOpen","imgSrc","setImgSrc","sender","endsWith","handleClickOpen","ImageDialog","onClose","handleClose","TextMsg","_ref5","_ref7","Dialog","maxWidth","DialogContent","DialogActions","chatHistory","onRequestConversation","messages","index","setChatHistory","Header","overflowY","Message","Footer","newMessage","conversation","messageData","post","savedMessage","prevHistory","Switch","transition","transitions","create","duration","boxSizing","Transition","props","Slide","BlockDialog","TransitionComponent","keepMounted","DialogTitle","DialogContentText","DeleteDialog","Contact","openBlock","setOpenBlock","openDelete","setOpenDelete","X","fullName","VideoCamera","Divider","UpdateSidebarType","endIcon","CaretRight","food","Star","Bell","AntSwitch","startIcon","Prohibit","Trash","handleCloseBlock","handleCloseDelete","GeneralApp","sidebar","useSelector","store","app","isAwaitingApproval","setIsAwaitingApproval","setUser","Chats","chat","updatedChat","Conversation","handleRequestConversation","StarredMessages","SharedMessages"],"sourceRoot":""}