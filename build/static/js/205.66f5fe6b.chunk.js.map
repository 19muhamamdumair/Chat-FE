{"version":3,"file":"static/js/205.66f5fe6b.chunk.js","mappings":"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","sources":["data/index.js","components/Search/Search.js","components/Search/SearchIconWrapper.js","components/Search/StyledInputBase.js","components/StyledBadge.js","components/ChatElement.js","pages/dashboard/Chats.js","components/Conversation/Header.js","components/Conversation/Footer.js","components/Conversation/MsgTypes.js","components/Conversation/Message.js","components/Conversation/index.js","components/AntSwitch.js","components/Contact.js","components/SharedMessages.js","components/StarredMessages.js","pages/dashboard/GeneralApp.js"],"sourcesContent":["import { faker } from \"@faker-js/faker\";\r\nimport {\r\n  ChatCircleDots,\r\n  Gear,\r\n  GearSix,\r\n  Phone,\r\n  SignOut,\r\n  User,\r\n  Users,\r\n} from \"phosphor-react\";\r\n\r\n// src/data/conversations.js\r\nexport const users = [\r\n  { id: 1, username: \"therapist1\" },\r\n  { id: 2, username: \"therapist2\" },\r\n  { id: 3, username: \"therapist3\" },\r\n  { id: 4, username: \"parent1\" },\r\n  { id: 5, username: \"parent2\" },\r\n  { id: 6, username: \"parent3\" }\r\n];\r\n\r\n// export const messages =[\r\n//   {\r\n//     oConversations:conversations,\r\n//     sender:ChatList,\r\n//     content:String\r\n//   }\r\n// ]\r\n\r\nexport const conversations = [\r\n  {\r\n    id: 1,\r\n    therapist: 1,\r\n    parent: 4,\r\n    status: \"active\",\r\n    content: [\r\n      { id: 1, sender: 1, content: \"Hi, how are you?\", timestamp: \"2023-07-01T10:00:00Z\" },\r\n      { id: 2, sender: 4, content: \"I'm good, thank you!\", timestamp: \"2023-07-01T10:05:00Z\" },\r\n      { id: 3, sender: 1, content: \"Great to hear!\", timestamp: \"2023-07-01T10:10:00Z\" }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    therapist: 2,\r\n    parent: 5,\r\n    status: \"active\",\r\n    content: [\r\n      { id: 4, sender: 2, content: \"Hi, can we reschedule our meeting?\", timestamp: \"2023-07-02T12:00:00Z\" },\r\n      { id: 5, sender: 5, content: \"Sure, when would you like to reschedule?\", timestamp: \"2023-07-02T12:05:00Z\" }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    therapist: 3,\r\n    parent: 6,\r\n    status: \"active\",\r\n    content: [\r\n      { id: 6, sender: 3, content: \"Hello, how's the therapy going?\", timestamp: \"2023-07-03T14:00:00Z\" },\r\n      { id: 7, sender: 6, content: \"It's going well, thanks!\", timestamp: \"2023-07-03T14:05:00Z\" }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\nconst Profile_Menu = [\r\n  {\r\n    title: \"Profile\",\r\n    icon: <User />,\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    icon: <Gear />,\r\n  },\r\n  {\r\n    title: \"Logout\",\r\n    icon: <SignOut />,\r\n  },\r\n];\r\n\r\nconst Nav_Buttons = [\r\n  {\r\n    index: 0,\r\n    icon: <ChatCircleDots />,\r\n  },\r\n  {\r\n    index: 1,\r\n    icon: <Users />,\r\n  },\r\n  {\r\n    index: 2,\r\n    icon: <Phone />,\r\n  },\r\n];\r\n\r\nconst Nav_Setting = [\r\n  {\r\n    index: 3,\r\n    icon: <GearSix />,\r\n  },\r\n];\r\n\r\nconst CallLogs = [\r\n  {\r\n    id:0,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: false,\r\n    incoming: true,\r\n  },\r\n  {\r\n    id:1,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: true,\r\n    incoming: true,\r\n  },\r\n  {\r\n    id:2,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: false,\r\n    incoming: false,\r\n  },\r\n  {\r\n    id:3,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: false,\r\n    incoming: true,\r\n  },\r\n  {\r\n    id:4,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    missed: true,\r\n    incoming: true,\r\n  }\r\n];\r\n\r\nconst MembersList = [\r\n  {\r\n    id:0,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: true\r\n  },\r\n  {\r\n    id:1,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: false\r\n  },\r\n  {\r\n    id:2,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: true\r\n  },\r\n  {\r\n    id:3,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: false\r\n  },\r\n  {\r\n    id:4,\r\n    img: faker.image.avatar(),\r\n    name: faker.name.firstName(),\r\n    online: true\r\n  }\r\n];\r\n\r\nconst ChatList = [\r\n  {\r\n    id: 1,\r\n    name: \"John Doe\",\r\n    img: \"https://via.placeholder.com/150\",\r\n    online: true,\r\n    unread: 2,\r\n    conversationRequest: false,\r\n    time: \"9:36\",\r\n    messages: [\r\n      // { id: 1, type: \"msg\", message: \"Hi 👋🏻, How are you?\", incoming: true, outgoing: false },\r\n      // { id: 2, type: \"divider\", text: \"Today\" },\r\n      // { id: 3, type: \"msg\", message: \"Hi John, I am good. How about you?\", incoming: false, outgoing: true },\r\n      // { id: 4, type: \"msg\", message: \"I'm great, thanks for asking!\", incoming: true, outgoing: false }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Jane Smith\",\r\n    img: \"https://via.placeholder.com/150\",\r\n    online: false,\r\n    unread: 1,\r\n    conversationRequest: false,\r\n    time: \"9:36\",\r\n    messages: [\r\n      { id: 1, type: \"msg\", message: \"Can you send me the report?\", incoming: true, outgoing: false },\r\n      { id: 2, type: \"divider\", text: \"Yesterday\" },\r\n      { id: 3, type: \"msg\", message: \"Sure, I will send it by EOD.\", incoming: false, outgoing: true },\r\n      { id: 4, type: \"msg\", message: \"Thanks!\", incoming: true, outgoing: false }\r\n    ]\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Alex Johnson\",\r\n    img: \"https://via.placeholder.com/150\",\r\n    online: true,\r\n    conversationRequest: false,\r\n    time: \"9:36\",\r\n    unread: 0,\r\n    messages: [\r\n      { id: 1, type: \"msg\", message: \"Testing\", incoming: true, outgoing: false },\r\n      { id: 2, type: \"divider\", text: \"Today\" },\r\n      { id: 3, type: \"msg\", message: \"Yes, I'll be there in 10 minutes.\", incoming: false, outgoing: true }\r\n    ]\r\n  }\r\n];\r\n\r\n\r\n// const ChatList = [\r\n//   {\r\n//     id: 1,\r\n//     name: \"John Doe\",\r\n//     img: \"https://via.placeholder.com/150\",\r\n//     online: true,\r\n//     unread: 2,\r\n//     conversationRequest: true,\r\n//     time: \"9:36\",\r\n//     messages: [\r\n//       { id: 1, type: \"msg\", message: \"Hi 👋🏻, How are you?\", incoming: true, outgoing: false },\r\n//       { id: 2, type: \"divider\", text: \"Today\" },\r\n//       { id: 3, type: \"msg\", message: \"Hi John, I am good. How about you?\", incoming: false, outgoing: true },\r\n//       { id: 4, type: \"msg\", message: \"I'm great, thanks for asking!\", incoming: true, outgoing: false }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Jane Smith\",\r\n//     img: \"https://via.placeholder.com/150\",\r\n//     online: false,\r\n//     unread: 1,\r\n//     conversationRequest: false,\r\n//     time: \"9:36\",\r\n//     messages: [\r\n//       // { id: 1, type: \"msg\", message: \"Can you send me the report?\", incoming: true, outgoing: false },\r\n//       // { id: 2, type: \"divider\", text: \"Yesterday\" },\r\n//       // { id: 3, type: \"msg\", message: \"Sure, I will send it by EOD.\", incoming: false, outgoing: true },\r\n//       // { id: 4, type: \"msg\", message: \"Thanks!\", incoming: true, outgoing: false }\r\n//     ]\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     name: \"Alex Johnson\",\r\n//     img: \"https://via.placeholder.com/150\",\r\n//     online: true,\r\n//     conversationRequest: false,\r\n//     time: \"9:36\",\r\n//     unread: 0,\r\n//     messages: [\r\n//       { id: 1, type: \"msg\", message: \"Testing\", incoming: true, outgoing: false },\r\n//       { id: 2, type: \"divider\", text: \"Today\" },\r\n//       { id: 3, type: \"msg\", message: \"Yes, I'll be there in 10 minutes.\", incoming: false, outgoing: true }\r\n//     ]\r\n//   }\r\n// ];\r\nconst Chat_History = [\r\n  {\r\n    type: \"msg\",\r\n    message: \"Hi 👋🏻, How are ya ?\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"divider\",\r\n    text: \"Today\",\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Hi 👋 Panda, not bad, u ?\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Can you send me an abstarct image?\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Ya sure, sending you a pic\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"img\",\r\n    message: \"Here You Go\",\r\n    img: faker.image.abstract(),\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    message: \"Can you please send this in file format?\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"reply\",\r\n    reply: \"This is a reply\",\r\n    message: \"Yep, I can also do that\",\r\n    incoming: false,\r\n    outgoing: true,\r\n  },\r\n];\r\n\r\nconst Message_options = [\r\n  {\r\n    title: \"Reply\",\r\n  },\r\n  {\r\n    title: \"React to message\",\r\n  },\r\n  {\r\n    title: \"Forward message\",\r\n  },\r\n  {\r\n    title: \"Star message\",\r\n  },\r\n  {\r\n    title: \"Report\",\r\n  },\r\n  {\r\n    title: \"Delete Message\",\r\n  },\r\n];\r\n\r\nconst SHARED_LINKS = [\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"link\",\r\n    preview: faker.image.cats(),\r\n    message: \"Yep, I can also do that\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  }\r\n]\r\n\r\nconst SHARED_DOCS = [\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n  {\r\n    type: \"msg\",\r\n    subtype: \"doc\",\r\n    message: \"Yes sure, here you go.\",\r\n    incoming: true,\r\n    outgoing: false,\r\n  },\r\n \r\n]\r\n\r\nexport {\r\n  Profile_Menu,\r\n  Nav_Setting,\r\n  Nav_Buttons,\r\n  ChatList,\r\n  Chat_History,\r\n  Message_options,\r\n  SHARED_DOCS,\r\n  SHARED_LINKS,\r\n  CallLogs,\r\n  MembersList\r\n};\r\n","import { styled, alpha } from '@mui/material/styles';\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: 20,\r\n    backgroundColor: alpha(theme.palette.background.default, 1),\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n  }));\r\n\r\n  export default Search","import { styled} from '@mui/material/styles';\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }));\r\n\r\n  export default SearchIconWrapper;","import { InputBase } from '@mui/material';\r\nimport { styled} from '@mui/material/styles';\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    \"& .MuiInputBase-input\": {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  export default StyledInputBase","import styled from \"@emotion/styled\";\r\nimport { Badge } from \"@mui/material\";\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    \"& .MuiBadge-badge\": {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  export default StyledBadge","import React from \"react\";\r\nimport { Avatar, Badge, Box, Stack, Typography } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport StyledBadge from \"./StyledBadge\";\r\n\r\nconst ChatElement = ({ id, name, img, msg, time, online, unread, onClick }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        borderRadius: 1,\r\n        backgroundColor: theme.palette.mode === 'light' ? \"#fff\" : theme.palette.background.default,\r\n        cursor: 'pointer'\r\n      }}\r\n      p={2}\r\n      onClick={onClick}\r\n    >\r\n      <Stack direction=\"row\" alignItems='center' justifyContent='space-between'>\r\n        <Stack direction='row' spacing={2}>\r\n          {online ? <StyledBadge overlap='circular' anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} variant=\"dot\">\r\n            <Avatar src={img} />\r\n          </StyledBadge> : <Avatar src={img} />}\r\n          <Stack spacing={0.3}>\r\n            <Typography variant='subtitle2'>\r\n              {name}\r\n            </Typography>\r\n            <Typography variant='caption'>\r\n              {msg}\r\n            </Typography>\r\n          </Stack>\r\n        </Stack>\r\n        <Stack spacing={2} alignItems='center'>\r\n          <Typography sx={{ fontWeight: 600 }} variant='caption'>\r\n            {time}\r\n          </Typography>\r\n          <Badge color='primary' badgeContent={unread} />\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n};\r\n\r\nexport default ChatElement;\r\n","import React from 'react';\r\nimport { Box, IconButton, Stack, Typography, InputBase, Button, Divider, Avatar, Badge } from '@mui/material';\r\nimport { ArchiveBox, CircleDashed, MagnifyingGlass } from 'phosphor-react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { faker } from '@faker-js/faker';\r\nimport { ChatList } from '../../data';\r\nimport { Search, SearchIconWrapper, StyledInputBase } from '../../components/Search';\r\nimport ChatElement from '../../components/ChatElement';\r\n\r\nconst Chats = ({ setSelectedChat }) => {\r\n  const theme = useTheme();\r\n  const user = {\r\n    role: 'therapist'\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Box sx={{\r\n      position: \"relative\", width: 320,\r\n      backgroundColor: theme.palette.mode === 'light' ? \"#F8FAFF\" : theme.palette.background.paper,\r\n      boxShadow: '0px 0px 2px rgba(0,0,0,0.25)'\r\n    }}>\r\n      <Stack p={3} spacing={2} sx={{ height: \"100vh\" }}>\r\n        <Stack direction=\"row\" alignItems='center' justifyContent='space-between'>\r\n          <Typography variant='h5'>\r\n            Chats\r\n          </Typography>\r\n          <IconButton>\r\n            <CircleDashed />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        <Stack sx={{ width: \"100%\" }}>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <MagnifyingGlass color=\"#709CE6\" />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase placeholder='Search...' inputProps={{ \"aria-label\": \"search\" }} />\r\n          </Search>\r\n        </Stack>\r\n\r\n        <Stack className='scrollbar' spacing={2} direction='column' sx={{ flexGrow: 1, overflow: 'scroll', height: '100%' }}>\r\n          <Stack spacing={2.4}>\r\n            {user.role === 'therapist' ?\r\n              <Stack spacing={2.4}>\r\n                {ChatList.filter((el) => el.conversationRequest).length > 0 ?\r\n                  < Typography variant='subtitle2' sx={{ color: \"#676767\" }}>\r\n                Requests\r\n              </Typography> : \"\"\r\n            }\r\n\r\n            {ChatList.filter((el) => el.conversationRequest).map((el) => (\r\n              <ChatElement key={el.id} {...el} onClick={() => {\r\n                // debugger\r\n                setSelectedChat(el)\r\n              }\r\n\r\n              } />\r\n            ))}\r\n\r\n          </Stack>\r\n              : \"\"}\r\n          <Typography variant='subtitle2' sx={{ color: \"#676767\" }}>\r\n            {user.role === 'patient' ? \"All Therapists\" : \"All Patients\"}\r\n          </Typography>\r\n          {ChatList.filter((el) => !el.conversationRequest).map((el) => (\r\n            <ChatElement key={el.id} {...el} onClick={() => {\r\n              // debugger\r\n              setSelectedChat(el)\r\n            }\r\n\r\n            } />\r\n          ))}\r\n        </Stack>\r\n      </Stack>\r\n    </Stack>\r\n    </Box >\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import { Avatar, Box, Typography,IconButton, Divider,Stack, } from '@mui/material'\r\nimport { CaretDown, MagnifyingGlass, Phone,VideoCamera } from 'phosphor-react'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { faker } from '@faker-js/faker';\r\nimport StyledBadge from '../StyledBadge';\r\nimport { ToggleSidebar } from '../../redux/slices/app';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Header = ({selectedChat}) => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const [refresh,setRefresh]=useState(true);\r\n\r\n  useEffect(()=>{\r\n    setRefresh(!refresh)\r\n  },[selectedChat])\r\n  return (\r\n    <Box p={2} sx={{ width:'100%', backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background.paper, boxShadow:'0px 0px 2px rgba(0,0,0,0.25)'}}>\r\n    <Stack alignItems={'center'} direction='row' justifyContent={'space-between'}\r\n    sx={{width:'100%', height:'100%'}}>\r\n        <Stack onClick={()=>{\r\n            dispatch(ToggleSidebar());\r\n        }} direction={'row'} spacing={2}>\r\n            <Box>\r\n                <StyledBadge  overlap=\"circular\"\r\n                anchorOrigin={{ // position\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                variant=\"dot\">\r\n                    <Avatar alt={\"\"}src={selectedChat?.img}/>\r\n                </StyledBadge>\r\n                \r\n            </Box>\r\n            <Stack spacing={0.2}>\r\n                    <Typography variant='subtitle2'>\r\n                        {selectedChat?.name}\r\n                    </Typography>\r\n                    <Typography variant='caption'>\r\n                        {selectedChat?.online ===true? 'Online': 'Offline' }\r\n                    </Typography>\r\n                </Stack>\r\n        </Stack>\r\n        {/* <Stack direction='row' alignItems='center' spacing={3}>\r\n            <IconButton>\r\n                <VideoCamera/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <Phone/>\r\n            </IconButton>\r\n            <IconButton>\r\n                <MagnifyingGlass/>\r\n            </IconButton>\r\n            <Divider orientation='vertical' flexItem/>\r\n            <IconButton>\r\n                <CaretDown/>\r\n            </IconButton>\r\n        </Stack> */}\r\n    </Stack>\r\n</Box>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Fab,\r\n  IconButton,\r\n  InputAdornment,\r\n  Stack,\r\n  TextField,\r\n  Tooltip,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  LinkSimple,\r\n  PaperPlaneTilt,\r\n  Smiley,\r\n  Camera,\r\n  File,\r\n  Image as ImageIcon,\r\n  Sticker,\r\n  User,\r\n} from \"phosphor-react\";\r\nimport data from \"@emoji-mart/data\";\r\nimport Picker from \"@emoji-mart/react\";\r\n\r\nconst StyledInput = styled(TextField)(({ theme }) => ({\r\n  \"& .MuiInputBase-input\": {\r\n    paddingTop: \"12px\",\r\n    paddingBottom: \"12px\",\r\n  },\r\n}));\r\n\r\nconst Actions = [\r\n  {\r\n    color: \"#4da5fe\",\r\n    icon: <ImageIcon size={24} />,\r\n    y: 102,\r\n    title: \"Photo/Video\",\r\n    action: \"upload\",\r\n  }\r\n];\r\n\r\nconst ChatInput = ({ setOpenPicker, onSendMessage, handleSendRef }) => {\r\n  const [openAction, setOpenAction] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleSend = () => {\r\n    if (message.trim() !== \"\" || mediaPreview) {\r\n      onSendMessage({ text: message, media: mediaPreview });\r\n      setMessage(\"\");\r\n      setMediaPreview(null);\r\n    }\r\n  };\r\n\r\n  React.useImperativeHandle(handleSendRef, () => ({\r\n    send: handleSend,\r\n  }));\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const fileURL = URL.createObjectURL(file);\r\n      setMediaPreview({ url: fileURL, type: file.type, file: file }); // Store the file object\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <StyledInput\r\n        fullWidth\r\n        placeholder=\"Write a message...\"\r\n        variant=\"filled\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            handleSend();\r\n          }\r\n        }}\r\n        InputProps={{\r\n          disableUnderline: true,\r\n          startAdornment: (\r\n            <Stack sx={{ width: \"max-content\" }}>\r\n              <Stack\r\n                sx={{\r\n                  position: \"relative\",\r\n                  display: openAction ? \"inline-block\" : \"none\",\r\n                }}\r\n              >\r\n                {Actions.map((action) => (\r\n                  <Tooltip\r\n                    key={action.title}\r\n                    placement=\"right\"\r\n                    title={action.title}\r\n                  >\r\n                    <Fab\r\n                      sx={{\r\n                        position: \"absolute\",\r\n                        top: -action.y,\r\n                        backgroundColor: action.color,\r\n                      }}\r\n                      onClick={() => {\r\n                        if (action.action === \"upload\") {\r\n                          fileInputRef.current.click();\r\n                        }\r\n                      }}\r\n                    >\r\n                      {action.icon}\r\n                    </Fab>\r\n                  </Tooltip>\r\n                ))}\r\n                <input\r\n                  type=\"file\"\r\n                  ref={fileInputRef}\r\n                  style={{ display: \"none\" }}\r\n                  accept=\"image/*,video/*\"\r\n                  onChange={handleFileChange}\r\n                />\r\n              </Stack>\r\n              <InputAdornment>\r\n                <IconButton onClick={() => setOpenAction((prev) => !prev)}>\r\n                  <LinkSimple />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            </Stack>\r\n          ),\r\n        }}\r\n      />\r\n      {mediaPreview && (\r\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\r\n          {mediaPreview.type.startsWith(\"image\") ? (\r\n            <Avatar\r\n              src={mediaPreview.url}\r\n              alt=\"Image preview\"\r\n              sx={{ width: 100, height: 100 }}\r\n            />\r\n          ) : (\r\n            <video\r\n              controls\r\n              src={mediaPreview.url}\r\n              style={{ width: \"100%\", maxHeight: \"200px\" }}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Footer = ({ onSendMessage }) => {\r\n  const theme = useTheme();\r\n  const [openPicker, setOpenPicker] = useState(false);\r\n  const handleSendRef = useRef();\r\n\r\n  return (\r\n    <Box\r\n      p={2}\r\n      sx={{\r\n        width: \"100%\",\r\n        backgroundColor:\r\n          theme.palette.mode === \"light\"\r\n            ? \"#F8FAFF\"\r\n            : theme.palette.background.paper,\r\n        boxShadow: \"0px 0px 2px rgba(0,0,0,0.25)\",\r\n      }}\r\n    >\r\n      <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\r\n        <Stack sx={{ width: \"100%\" }}>\r\n          <ChatInput\r\n            setOpenPicker={setOpenPicker}\r\n            onSendMessage={onSendMessage}\r\n            handleSendRef={handleSendRef}\r\n          />\r\n        </Stack>\r\n        <Box\r\n          sx={{\r\n            height: 48,\r\n            width: 48,\r\n            backgroundColor: theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n          }}\r\n        >\r\n          <IconButton\r\n            onClick={() => handleSendRef.current.send()} // Trigger send message\r\n            sx={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <PaperPlaneTilt color=\"#fff\" size={24} />\r\n          </IconButton>\r\n        </Box>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n    Box,\r\n    Divider,\r\n    IconButton,\r\n    Link,\r\n    Stack,\r\n    Typography,\r\n    Menu,\r\n    MenuItem,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n  } from \"@mui/material\";\r\n  import { useTheme } from \"@mui/material/styles\";\r\n  import { DotsThreeVertical, DownloadSimple, Image } from \"phosphor-react\";\r\n  import React, { useState } from \"react\";\r\n  import { Message_options } from \"../../data\";\r\n  \r\n  const DocMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n      <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n        <Box\r\n          p={1.5}\r\n          sx={{\r\n            backgroundColor: el.incoming\r\n              ? theme.palette.background.default\r\n              : theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n            width: \"max-content\",\r\n          }}\r\n        >\r\n          <Stack spacing={2}>\r\n            <Stack\r\n              p={2}\r\n              spacing={3}\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              sx={{\r\n                backgroundColor: theme.palette.background.paper,\r\n                borderRadius: 1,\r\n              }}\r\n            >\r\n              <Image size={48} />\r\n              <Typography variant=\"caption\">Abstract.png</Typography>\r\n              <IconButton>\r\n                <DownloadSimple />\r\n              </IconButton>\r\n            </Stack>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{ color: el.incoming ? theme.palette.text : \"#fff\" }}\r\n            >\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions />}\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  const LinkMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n  \r\n    const handleClickOpen = (src) => {\r\n      setImgSrc(src);\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setImgSrc(null);\r\n    };\r\n  \r\n    return (\r\n      <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n        <Box\r\n          p={1.5}\r\n          sx={{\r\n            backgroundColor: el.incoming\r\n              ? theme.palette.background.default\r\n              : theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n            width: \"max-content\",\r\n          }}\r\n        >\r\n          <Stack spacing={2}>\r\n            <Stack\r\n              p={2}\r\n              spacing={3}\r\n              alignItems=\"start\"\r\n              sx={{\r\n                backgroundColor: theme.palette.background.paper,\r\n                borderRadius: 1,\r\n              }}\r\n            >\r\n              <img\r\n                src={el.preview}\r\n                alt={el.message}\r\n                style={{\r\n                  maxHeight: 210,\r\n                  borderRadius: \"10px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleClickOpen(el.preview)}\r\n              />\r\n              <Stack spacing={2}>\r\n                <Typography variant=\"subtitle2\">Creating Chat App</Typography>\r\n                <Typography\r\n                  variant=\"subtitle2\"\r\n                  sx={{ color: theme.palette.primary.main }}\r\n                  component={Link}\r\n                  to=\"//https://www.youtube.com\"\r\n                >\r\n                  www.youtube.com\r\n                </Typography>\r\n              </Stack>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color={el.incoming ? theme.palette.text : \"#fff\"}\r\n              >\r\n                {el.message}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions />}\r\n        <ImageDialog open={open} onClose={handleClose} imgSrc={imgSrc} />\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  const ReplyMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n      <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n        <Box\r\n          p={1.5}\r\n          sx={{\r\n            backgroundColor: el.incoming\r\n              ? theme.palette.background.default\r\n              : theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n            width: \"max-content\",\r\n          }}\r\n        >\r\n          <Stack spacing={2}>\r\n            <Stack\r\n              p={2}\r\n              direction=\"column\"\r\n              spacing={3}\r\n              alignItems=\"center\"\r\n              sx={{\r\n                backgroundColor: theme.palette.background.paper,\r\n                borderRadius: 1,\r\n              }}\r\n            >\r\n              <Typography variant=\"body2\" color={theme.palette.text}>\r\n                {el.message}\r\n              </Typography>\r\n            </Stack>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color={el.incoming ? theme.palette.text : \"#fff\"}\r\n            >\r\n              {el.reply}\r\n            </Typography>\r\n          </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions />}\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  const MediaMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n  \r\n    const handleClickOpen = (src) => {\r\n      setImgSrc(src);\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setImgSrc(null);\r\n    };\r\n  \r\n    return (\r\n      <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n        <Box\r\n          p={1.5}\r\n          sx={{\r\n            backgroundColor: el.incoming\r\n              ? theme.palette.background.default\r\n              : theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n            width: \"max-content\",\r\n          }}\r\n        >\r\n          <Stack spacing={1}>\r\n            {el.img && (\r\n              <img\r\n                src={el.img}\r\n                alt={el.message}\r\n                style={{\r\n                  maxHeight: 210,\r\n                  borderRadius: \"10px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleClickOpen(el.img)}\r\n              />\r\n            )}\r\n            {el.video && (\r\n              <video\r\n                controls\r\n                src={el.video}\r\n                style={{ width: \"100%\", maxHeight: 210, borderRadius: \"10px\" }}\r\n              />\r\n            )}\r\n            <Typography\r\n              variant=\"body2\"\r\n              color={el.incoming ? theme.palette.text : \"#fff\"}\r\n            >\r\n              {el.message}\r\n            </Typography>\r\n          </Stack>\r\n        </Box>\r\n        {menu && <MessageOptions />}\r\n        <ImageDialog open={open} onClose={handleClose} imgSrc={imgSrc} />\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  const TextMsg = ({ el, menu }) => {\r\n    const theme = useTheme();\r\n    return (\r\n      <Stack direction=\"row\" justifyContent={el.incoming ? \"start\" : \"end\"}>\r\n        <Box\r\n          p={1.5}\r\n          sx={{\r\n            backgroundColor: el.incoming\r\n              ? theme.palette.background.default\r\n              : theme.palette.primary.main,\r\n            borderRadius: 1.5,\r\n            width: \"max-content\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={el.incoming ? theme.palette.text : \"#fff\"}\r\n          >\r\n            {el.message}\r\n          </Typography>\r\n        </Box>\r\n        {menu && <MessageOptions />}\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  const TimeLine = ({ el }) => {\r\n    const theme = useTheme();\r\n    return (\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Divider width=\"46%\" />\r\n        <Typography variant=\"caption\" sx={{ color: theme.palette.text }}>\r\n          {el.text}\r\n        </Typography>\r\n        <Divider width=\"46%\" />\r\n      </Stack>\r\n    );\r\n  };\r\n  \r\n  const MessageOptions = () => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    return (\r\n      <>\r\n        <DotsThreeVertical\r\n          id=\"basic-button\"\r\n          aria-controls={open ? \"basic-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          onClick={handleClick}\r\n          size={20}\r\n        />\r\n  \r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          <Stack spacing={1} px={1}>\r\n            {Message_options.map((el) => (\r\n              <MenuItem onClick={handleClose}>{el.title}</MenuItem>\r\n            ))}\r\n          </Stack>\r\n        </Menu>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  const ImageDialog = ({ open, onClose, imgSrc }) => {\r\n    return (\r\n      <Dialog open={open} onClose={onClose} maxWidth=\"md\">\r\n        <DialogContent>\r\n          <img src={imgSrc} alt=\"Preview\" style={{ width: \"100%\" }} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n  \r\n  // should not be default export, because we need to export multiple things\r\n  export { TimeLine, TextMsg, MediaMsg, ReplyMsg, LinkMsg, DocMsg };\r\n  ","import { Box, Button, Stack, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {\r\n  DocMsg,\r\n  LinkMsg,\r\n  MediaMsg,\r\n  ReplyMsg,\r\n  TextMsg,\r\n  TimeLine,\r\n} from \"./MsgTypes\";\r\n\r\nconst Message = ({ chatHistory, menu, onRequestConversation }) => {\r\n  // if (!chatHistory || !chatHistory.messages || chatHistory.messages.length === 0) {\r\n  //   return (\r\n  //     <Box p={3} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n  //       <Stack spacing={3} alignItems=\"center\">\r\n  //         <Typography variant=\"h6\">No chat history found.</Typography>\r\n  //         <Button variant=\"contained\" color=\"primary\" onClick={onRequestConversation}>\r\n  //           Request Conversation with Therapist\r\n  //         </Button>\r\n  //       </Stack>\r\n  //     </Box>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Stack spacing={3}>\r\n        {chatHistory.messages.map((el, index) => {\r\n          switch (el.type) {\r\n            case \"divider\":\r\n              return <TimeLine key={index} el={el} />;\r\n            case \"msg\":\r\n              switch (el.subtype) {\r\n                case \"img\":\r\n                case \"video\": // Add video subtype here\r\n                  return <MediaMsg key={index} el={el} menu={menu} />;\r\n                case \"doc\":\r\n                  return <DocMsg key={index} el={el} menu={menu} />;\r\n                case \"link\":\r\n                  return <LinkMsg key={index} el={el} menu={menu} />;\r\n                case \"reply\":\r\n                  return <ReplyMsg key={index} el={el} menu={menu} />;\r\n                default:\r\n                  return <TextMsg key={index} el={el} menu={menu} />;\r\n              }\r\n            default:\r\n              return <></>;\r\n          }\r\n        })}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, Button, Stack, Typography } from '@mui/material';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Message from './Message';\r\nimport { Chat_History as initialChatHistory } from \"../../data\"; // Make sure the path is correct\r\n\r\n\r\nconst Conversation = ({ selectedChat, onRequestConversation }) => {\r\n  const theme = useTheme();\r\n\r\n  const user={\r\n    role:'therapist'\r\n  }\r\n\r\n  const [chatHistory, setChatHistory] = useState(selectedChat?.messages ? selectedChat : null);\r\n\r\n  useEffect(()=>{\r\n    setChatHistory(selectedChat?.messages ? selectedChat : null)\r\n  },[selectedChat])\r\n\r\n  const handleSendMessage = (messageData) => {\r\n    const newMessage = {\r\n      id:chatHistory.messages[chatHistory.messages.length-1].id+1,\r\n      type: \"msg\",\r\n      message: messageData.text || \"\",\r\n      incoming: false,\r\n      outgoing: true,\r\n    };\r\n\r\n    if (messageData.media) {\r\n      if (messageData.media.type.startsWith(\"image\")) {\r\n        newMessage.subtype = \"img\";\r\n        newMessage.img = messageData.media.url;\r\n      } else if (messageData.media.type.startsWith(\"video\")) {\r\n        newMessage.subtype = \"video\";\r\n        newMessage.video = messageData.media.url;\r\n      }\r\n    }\r\n\r\n    setChatHistory((prevHistory) => ({\r\n      ...prevHistory,\r\n      messages: [...prevHistory.messages, newMessage],\r\n    }));\r\n  };\r\n\r\n\r\n  const requestChat = () => {\r\n    // if (!chatHistory || !chatHistory.messages || chatHistory.messages.length === 0) {\r\n\r\n    return (\r\n      <Box p={3} display=\"flex\" justifyContent=\"center\"  height=\"100%\">\r\n        <Stack spacing={3} alignItems=\"center\">\r\n          <Typography variant=\"h6\">No chat history found.</Typography>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onRequestConversation}>\r\n            Request Conversation with Therapist\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    );\r\n    // }\r\n  }\r\n\r\n  const acceptChat = () => {\r\n    // if (!chatHistory || !chatHistory.messages || chatHistory.messages.length === 0) {\r\n\r\n    return (\r\n      <Box p={3} display=\"flex\" justifyContent=\"center\"  height=\"100%\">\r\n        <Stack spacing={3} alignItems=\"center\">\r\n          {/* <Typography variant=\"h6\">No chat history found.</Typography> */}\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onRequestConversation}>\r\n            Accept Conversation Request from Patient\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    );\r\n    // }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Stack height={'100%'} maxHeight={'100vh'} width={'auto'}>\r\n      {chatHistory ? <Header selectedChat={chatHistory} /> : \"\"}\r\n      <Box className='scrollbar' width={\"100%\"} sx={{ flexGrow: 1, height: '100%', overflowY: 'scroll' }}>\r\n        {chatHistory ? <Message chatHistory={chatHistory} menu={true} onRequestConversation={onRequestConversation} /> : \r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n          <Typography variant='h6'>\r\n            {user.role===\"therapist\"?\"Select a patient to chat\" : \"Select a therapist for consultation\"}\r\n          </Typography>\r\n        </Box>}\r\n      </Box>\r\n      {chatHistory === null ? \"\" : chatHistory && chatHistory.messages && chatHistory.messages.length > 0 ? <Footer onSendMessage={handleSendMessage} /> : user.role==='therapist'?acceptChat() : requestChat()}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","import { Switch } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n  width: 40,\r\n  height: 20,\r\n  padding: 0,\r\n  display: 'flex',\r\n  '&:active': {\r\n    '& .MuiSwitch-thumb': {\r\n      width: 15,\r\n    },\r\n    '& .MuiSwitch-switchBase.Mui-checked': {\r\n      transform: 'translateX(9px)',\r\n    },\r\n  },\r\n  '& .MuiSwitch-switchBase': {\r\n    padding: 2,\r\n    '&.Mui-checked': {\r\n      transform: 'translateX(20px)',\r\n      color: '#fff',\r\n      '& + .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff',\r\n      },\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n    width: 16,\r\n    height: 16,\r\n    borderRadius: 8,\r\n    transition: theme.transitions.create(['width'], {\r\n      duration: 200,\r\n    }),\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 20 / 2,\r\n    opacity: 1,\r\n    backgroundColor:\r\n      theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n    boxSizing: 'border-box',\r\n  },\r\n}));\r\n\r\nexport default AntSwitch;\r\n","import { Avatar, Box, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, IconButton, Slide, Stack, Typography} from '@mui/material'\r\nimport React, { useState } from 'react';\r\nimport {useTheme } from \"@mui/material/styles\";\r\nimport { Bell, CaretRight, Phone, Prohibit, Star, Trash, VideoCamera, X } from 'phosphor-react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ToggleSidebar, UpdateSidebarType } from '../redux/slices/app';\r\nimport { faker } from '@faker-js/faker';\r\nimport AntSwitch from './AntSwitch';\r\nimport '../css/global.css';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst BlockDialog = ({open, handleClose}) =>{\r\n  return (\r\n    <Dialog\r\n    open={open}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleClose}\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n  >\r\n    <DialogTitle>Block this contact</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\">\r\n       Are you sure you want to block this contact?\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose}>Cancel</Button>\r\n      <Button onClick={handleClose}>Yes</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n  )\r\n}\r\n\r\nconst DeleteDialog = ({open, handleClose}) =>{\r\n  return (\r\n    <Dialog\r\n    open={open}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleClose}\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n  >\r\n    <DialogTitle>Delete this chat</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\">\r\n       Are you sure you want to delete this chat?\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleClose}>Cancel</Button>\r\n      <Button onClick={handleClose}>Yes</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n  )\r\n}\r\n\r\nconst Contact = () => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openBlock, setOpenBlock] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n\r\n  const handleCloseBlock = () =>{\r\n    setOpenBlock(false);\r\n  }\r\n\r\n  const handleCloseDelete = () =>{\r\n    setOpenDelete(false);\r\n  }\r\n\r\n  return (\r\n    <Box sx={{width:320, height:'100vh'}}>\r\n      <Stack sx={{height:'100%'}}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          boxShadow: '0px 0px 2px rgba(0.25)',\r\n          width: '100%',\r\n          backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background\r\n        }}>\r\n          <Stack sx={{height:'100%', p:2}} direction='row' alignItems='center'\r\n           justifyContent='space-between' spacing={3}>\r\n            <Typography variant='subtitle2'>Contact Info</Typography>\r\n            <IconButton onClick={()=>{\r\n              dispatch(ToggleSidebar());\r\n            }}>\r\n              <X/>\r\n            </IconButton>\r\n          </Stack>\r\n        </Box>\r\n        {/* Body */}\r\n        <Stack className='scrollbar'  sx={{height:'100%', position:'relative', flexGrow:1, overflowY:'scroll'}} p={3}\r\n        spacing={3}>\r\n          <Stack alignItems={'center'} direction='row' spacing={2}>\r\n            <Avatar src={faker.image.avatar()} alt={faker.name.firstName} sx={{height:64, width:64}}/>\r\n            <Stack spacing={0.5}>\r\n              <Typography variant='article' fontWeight={600}>\r\n                {faker.name.fullName()}\r\n              </Typography>\r\n              <Typography variant='article' fontWeight={500}>\r\n                {'+94 713725452'}\r\n              </Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack direction='row' alignItems='center' justifyContent='space-evenly'>\r\n            <Stack spacing={1} alignItems='center' >\r\n              <IconButton>\r\n                <Phone/>\r\n              </IconButton>\r\n              <Typography variant='overline'>Voice</Typography>\r\n            </Stack>\r\n            <Stack spacing={1} alignItems='center' >\r\n              <IconButton>\r\n                <VideoCamera/>\r\n              </IconButton>\r\n              <Typography variant='overline'>Video</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack spacing={0.5}>\r\n            <Typography variant='article'>About</Typography>\r\n            <Typography variant='body2'>Hi I'm working</Typography>\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack direction='row' alignItems={'center'} justifyContent='space-between' >\r\n            <Typography variant='subtitle2'>Media, Links & Docs</Typography>\r\n            <Button onClick={()=>{\r\n              dispatch(UpdateSidebarType('SHARED'))\r\n            }} endIcon={<CaretRight/>}>401</Button>\r\n          </Stack>\r\n          <Stack direction='row' spacing={2} alignItems={'center'}>\r\n            {[1,2,3].map((el)=>(\r\n              <Box>\r\n                <img src={faker.image.food()} alt={faker.name.fullName()}/>\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack direction='row' alignItems={'center'} justifyContent='space-between'>\r\n            <Stack direction='row' spacing={2} alignItems={'center'}>\r\n              <Star size={21}/>\r\n              <Typography variant='subtitle2'>Starred Messages</Typography>\r\n            </Stack>\r\n            <IconButton onClick={()=>{\r\n              dispatch(UpdateSidebarType('STARRED'))\r\n            }}><CaretRight/></IconButton>\r\n          </Stack>\r\n          <Divider/>\r\n          <Stack direction='row' alignItems={'center'} justifyContent='space-between'>\r\n            <Stack direction='row' spacing={2} alignItems={'center'}>\r\n              <Bell size={21}/>\r\n              <Typography variant='subtitle2'>Mute Notifications</Typography>\r\n            </Stack>\r\n            <AntSwitch/>\r\n          </Stack>\r\n          <Divider/>\r\n          <Typography>1 group in common</Typography>\r\n          <Stack direction='row' spacing={2} alignItems={'center'}>\r\n            <Avatar src={faker.image.avatar()} alt={faker.name.fullName}/>\r\n            <Stack spacing={0.5}>\r\n              <Typography variant='subtitle2' >React Developers</Typography>\r\n              <Typography variant='caption' >Kaveena, Pavithra, Ayesha, You</Typography>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack direction='row' alignItems={'center'} spacing={2}>\r\n            <Button onClick={()=>{setOpenBlock(true)}} startIcon={<Prohibit/>} fullWidth variant='outlined'>\r\n              Block\r\n            </Button >\r\n            <Button onClick={()=>{setOpenDelete(true)}} startIcon={<Trash/>} fullWidth variant='outlined'>\r\n              Delete\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n      {openBlock && <BlockDialog open={openBlock} handleClose={handleCloseBlock}/>}\r\n      {openDelete && <DeleteDialog open={openDelete} handleClose={handleCloseDelete}/>}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport { Box, Grid, IconButton, Stack, Tab, Tabs, Typography } from '@mui/material';\r\nimport {useTheme } from \"@mui/material/styles\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { UpdateSidebarType } from '../redux/slices/app';\r\nimport { CaretLeft, X } from 'phosphor-react';\r\nimport { faker } from '@faker-js/faker';\r\nimport { SHARED_DOCS, SHARED_LINKS } from '../data';\r\nimport {DocMsg, LinkMsg} from './Conversation/MsgTypes'\r\n\r\nconst SharedMessages = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n  return (\r\n    <Box sx={{width:320, height:'100vh'}}>\r\n        <Stack sx={{height:'100%'}}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          boxShadow: '0px 0px 2px rgba(0.25)',\r\n          width: '100%',\r\n          backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background\r\n        }}>\r\n          <Stack sx={{height:'100%', p:2}} direction='row' alignItems='center' spacing={3}>\r\n             <IconButton onClick={()=>{\r\n              dispatch(UpdateSidebarType('CONTACT'));\r\n            }}>\r\n              <CaretLeft/>\r\n            </IconButton>\r\n            <Typography variant='subtitle2'>Shared Messages</Typography>\r\n           \r\n          </Stack>\r\n        </Box>\r\n\r\n        <Tabs sx={{px:2, pt:2}} value={value} onChange={handleChange} centered>\r\n            <Tab label=\"Media\" />\r\n            <Tab label=\"Link\" />\r\n            <Tab label=\"Docs\" />\r\n        </Tabs>\r\n\r\n        {/* Body */}\r\n        <Stack className='scrollbar' sx={{height:'100%', position:'relative', flexGrow:1, overflowY:'scroll'}} p={3}\r\n        spacing={value === 1 ? 1 :3}>\r\n            {(()=>{\r\n                switch (value) {\r\n                    case 0:\r\n                        //Images\r\n                       return <Grid container spacing={2}>\r\n                            {\r\n                                [0,1,2,3,4,5,6].map((el)=>{\r\n                                   return <Grid item xs={4}>\r\n                                        <img src={faker.image.avatar()} alt={faker.name.fullName}/>\r\n                                    </Grid>\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                        \r\n                    case 1:\r\n                        return SHARED_LINKS.map((el)=> <LinkMsg el={el}/>)\r\n                        \r\n                    case 2:\r\n                        return SHARED_DOCS.map((el)=> <DocMsg el={el}/>)\r\n                        \r\n                    default:\r\n                        break;\r\n                }\r\n            })()}\r\n        </Stack>\r\n        </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SharedMessages","import React from 'react'\r\nimport { Box, Grid, IconButton, Stack, Tab, Tabs, Typography } from '@mui/material';\r\nimport {useTheme } from \"@mui/material/styles\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { UpdateSidebarType } from '../redux/slices/app';\r\nimport { CaretLeft, X } from 'phosphor-react';\r\nimport { faker } from '@faker-js/faker';\r\nimport { SHARED_DOCS, SHARED_LINKS } from '../data';\r\nimport {DocMsg, LinkMsg} from './Conversation/MsgTypes'\r\nimport Message from './Conversation/Message';\r\n\r\nconst StarredMessages = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box sx={{width:320, height:'100vh'}}>\r\n        <Stack sx={{height:'100%'}}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          boxShadow: '0px 0px 2px rgba(0.25)',\r\n          width: '100%',\r\n          backgroundColor: theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background\r\n        }}>\r\n          <Stack sx={{height:'100%', p:2}} direction='row' alignItems='center' spacing={3}>\r\n             <IconButton onClick={()=>{\r\n              dispatch(UpdateSidebarType('CONTACT'));\r\n            }}>\r\n              <CaretLeft/>\r\n            </IconButton>\r\n            <Typography variant='subtitle2'>Starred Messages</Typography>\r\n           \r\n          </Stack>\r\n        </Box>\r\n\r\n        {/* Body */}\r\n        <Stack className='scrollbar' sx={{height:'100%', position:'relative', flexGrow:1, overflowY:'scroll'}} p={3}\r\n        spacing={3}>\r\n          <Message/>\r\n        </Stack>\r\n        </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default StarredMessages","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Stack } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Chats from \"./Chats\";\r\nimport Conversation from \"../../components/Conversation\";\r\nimport Contact from \"../../components/Contact\";\r\nimport SharedMessages from \"../../components/SharedMessages\";\r\nimport StarredMessages from \"../../components/StarredMessages\";\r\nimport ChatRequests from \"../../components/Conversation/ChatRequests\";\r\n// import ChatRequests from \"../../components/ChatRequests\";\r\n\r\nconst GeneralApp = () => {\r\n  const theme = useTheme();\r\n  const { sidebar } = useSelector((store) => store.app); // access our store inside component\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [isAwaitingApproval, setIsAwaitingApproval] = useState(false);\r\n  const [chatRequests, setChatRequests] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   if (user.role === 'therapist') {\r\n  //     fetchChatRequests();\r\n  //   }\r\n  // }, [user.role]);\r\n\r\n  const fetchChatRequests = async () => {\r\n    const response = await fetch('/api/chat-requests/');\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      setChatRequests(data);\r\n    }\r\n  };\r\n\r\n  const handleRequestConversation = async () => {\r\n    // Implement the logic to send a request for a conversation\r\n    console.log(\"Request conversation with therapist\");\r\n    // Send API request to create a new chat request\r\n    const response = await fetch('/api/chat-requests/', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ therapist: selectedChat.therapist.id, parent: selectedChat.parent.id }),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n    if (response.ok) {\r\n      setIsAwaitingApproval(true);\r\n    }\r\n  };\r\n\r\n  const handleChatSelection = (chat) => {\r\n    setSelectedChat(chat);\r\n    // Check if there's a pending request\r\n    if (chat.status === 'pending') {\r\n      setIsAwaitingApproval(true);\r\n    } else {\r\n      setIsAwaitingApproval(false);\r\n    }\r\n  };\r\n\r\n  const handleApproveRequest = async (requestId) => {\r\n    const response = await fetch(`/api/chat-requests/${requestId}/approve/`, {\r\n      method: 'POST',\r\n    });\r\n    if (response.ok) {\r\n      fetchChatRequests();\r\n      // Optionally, update the conversation state or notify the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Stack direction=\"row\" sx={{ width: \"100%\" }}>\r\n      {/* Chats */}\r\n      <Chats setSelectedChat={handleChatSelection} />\r\n\r\n      <Box\r\n        sx={{\r\n          height: \"100%\",\r\n          width: sidebar.open ? \"calc(100vw - 740px)\" : \"calc(100vw - 420px)\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\" ? \"#F0F4FA\" : theme.palette.background.default,\r\n        }}\r\n      >\r\n        {/* Conversation */}\r\n        <Conversation\r\n          selectedChat={selectedChat}\r\n          onRequestConversation={handleRequestConversation}\r\n          isAwaitingApproval={isAwaitingApproval}\r\n        />\r\n      </Box>\r\n      {/* Contact */}\r\n      {sidebar.open &&\r\n        (() => {\r\n          switch (sidebar.type) {\r\n            case \"CONTACT\":\r\n              return <Contact />;\r\n            case \"STARRED\":\r\n              return <StarredMessages />;\r\n            case \"SHARED\":\r\n              return <SharedMessages />;\r\n            default:\r\n              break;\r\n          }\r\n        })()}\r\n      {/* Chat Requests for Therapists */}\r\n      {/* {user.role === 'therapist' && (\r\n        <ChatRequests requests={chatRequests} onApprove={handleApproveRequest} />\r\n      )} */}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default GeneralApp;\r\n"],"names":["User","Gear","SignOut","ChatCircleDots","Users","Phone","GearSix","faker","image","avatar","name","firstName","ChatList","id","img","online","unread","conversationRequest","time","messages","type","message","incoming","outgoing","text","Message_options","abstract","cats","title","SHARED_LINKS","subtype","preview","SHARED_DOCS","styled","_ref","theme","position","borderRadius","backgroundColor","alpha","palette","background","default","marginRight","spacing","marginLeft","width","padding","height","pointerEvents","display","alignItems","justifyContent","InputBase","color","paddingLeft","concat","Badge","boxShadow","paper","top","left","animation","border","content","transform","opacity","msg","onClick","useTheme","_jsx","Box","sx","mode","cursor","p","children","_jsxs","Stack","direction","StyledBadge","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","src","Typography","fontWeight","badgeContent","setSelectedChat","user","IconButton","CircleDashed","Search","SearchIconWrapper","MagnifyingGlass","StyledInputBase","placeholder","inputProps","className","flexGrow","overflow","filter","el","length","map","ChatElement","selectedChat","dispatch","useDispatch","refresh","setRefresh","useState","useEffect","ToggleSidebar","alt","StyledInput","TextField","paddingTop","paddingBottom","Actions","icon","ImageIcon","size","y","action","ChatInput","_ref2","setOpenPicker","onSendMessage","handleSendRef","openAction","setOpenAction","setMessage","mediaPreview","setMediaPreview","fileInputRef","useRef","handleSend","trim","media","React","send","fullWidth","value","onChange","e","target","onKeyPress","key","InputProps","disableUnderline","startAdornment","Tooltip","placement","Fab","current","click","ref","style","accept","event","file","files","fileURL","URL","createObjectURL","url","InputAdornment","prev","LinkSimple","mt","textAlign","startsWith","controls","maxHeight","_ref3","openPicker","primary","main","PaperPlaneTilt","DocMsg","menu","Image","DownloadSimple","MessageOptions","LinkMsg","open","setOpen","imgSrc","setImgSrc","handleClickOpen","component","Link","to","ImageDialog","onClose","handleClose","ReplyMsg","reply","MediaMsg","_ref4","video","TextMsg","_ref5","TimeLine","_ref6","Divider","anchorEl","setAnchorEl","Boolean","_Fragment","DotsThreeVertical","undefined","currentTarget","Menu","MenuListProps","px","MenuItem","_ref7","Dialog","maxWidth","DialogContent","DialogActions","Button","chatHistory","onRequestConversation","index","setChatHistory","Header","overflowY","Message","Footer","messageData","newMessage","prevHistory","Switch","transition","transitions","create","duration","boxSizing","Transition","props","Slide","BlockDialog","TransitionComponent","keepMounted","DialogTitle","DialogContentText","DeleteDialog","Contact","openBlock","setOpenBlock","openDelete","setOpenDelete","X","fullName","VideoCamera","UpdateSidebarType","endIcon","CaretRight","food","Star","Bell","AntSwitch","startIcon","Prohibit","Trash","handleCloseBlock","handleCloseDelete","SharedMessages","setValue","CaretLeft","Tabs","pt","handleChange","newValue","centered","Tab","label","Grid","container","item","xs","StarredMessages","GeneralApp","sidebar","useSelector","store","app","isAwaitingApproval","setIsAwaitingApproval","chatRequests","setChatRequests","Chats","chat","status","Conversation","async","console","log","fetch","method","body","JSON","stringify","therapist","parent","headers","ok"],"sourceRoot":""}